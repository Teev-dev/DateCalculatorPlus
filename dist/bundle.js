(()=>{"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){if(t.length<e)throw new TypeError(e+" argument"+(e>1?"s":"")+" required, but only "+t.length+" present")}function o(o){t(1,arguments);var n=Object.prototype.toString.call(o);return o instanceof Date||"object"===e(o)&&"[object Date]"===n?new Date(o.getTime()):"number"==typeof o||"[object Number]"===n?new Date(o):("string"!=typeof o&&"[object String]"!==n||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"),console.warn((new Error).stack)),new Date(NaN))}let n=[],a=!1;console.log("Initializing countries..."),async function(){try{console.log("Fetching countries from API...");const e=await fetch("https://openholidaysapi.org/Countries");if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);const t=await e.json();if(console.log("Raw API response:",t),!Array.isArray(t))throw new Error("API response is not an array");const o=t.map((e=>e.isoCode&&Array.isArray(e.name)&&0!==e.name.length?{code:e.isoCode,name:e.name[0].text,flag:`https://flagcdn.com/w20/${e.isoCode.toLowerCase()}.png`}:(console.warn("Invalid country data:",e),null))).filter((e=>null!==e));return console.log("Mapped countries:",o),o.sort(((e,t)=>e.name.localeCompare(t.name)))}catch(e){return console.error("Error fetching countries:",e),[]}}().then((e=>{n=e,a=!0,console.log("Countries fetched and sorted:",n)})).catch((e=>{console.error("Failed to initialize countries:",e)}));const r=[{code:"US",name:"United States"},{code:"GB",name:"United Kingdom"},{code:"CA",name:"Canada"},{code:"AU",name:"Australia"},{code:"DE",name:"Germany"},{code:"FR",name:"France"},{code:"JP",name:"Japan"}];function c(){return n.length>0?n:r}const l="https://openholidaysapi.org/PublicHolidays";async function s(e,t){const o=`${l}?countryIsoCode=${e}&validFrom=${t}-01-01&validTo=${t}-12-31`;try{const e=await fetch(o);if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return await e.json()}catch(t){return console.error(`Error fetching holiday data for ${e}:`,t),null}}function i(e){return e.map((e=>e.startDate))}function u(){const e=localStorage.getItem("lastUpdated");if(!e)return!0;const n=function(e,n){t(2,arguments);var a=o(e),r=function(e){if(null===e||!0===e||!1===e)return NaN;var t=Number(e);return isNaN(t)?t:t<0?Math.ceil(t):Math.floor(t)}(n);if(isNaN(r))return new Date(NaN);if(!r)return a;var c=a.getDate(),l=new Date(a.getTime());return l.setMonth(a.getMonth()+r+1,0),c>=l.getDate()?l:(a.setFullYear(l.getFullYear(),l.getMonth(),c),a)}(new Date,-3);return function(e,n){t(2,arguments);var a=o(e),r=o(n);return a.getTime()<r.getTime()}(new Date(e),n)}function d(e){console.log("Populating country select. Countries list length:",e.length);const t=document.getElementById("country");t.innerHTML="",e.forEach((e=>{const o=document.createElement("option");o.value=e.code,o.textContent=`${e.name} (${e.code})`,t.appendChild(o)})),console.log("Country select options updated. Number of options:",t.options.length),console.log("First 5 options:",Array.from(t.options).slice(0,5).map((e=>e.textContent)))}console.log("date-fns, holiday_data_updater, and countries imported successfully"),document.addEventListener("DOMContentLoaded",(async function(){console.log("DOM content loaded");try{await async function(){if(u()){const e=(new Date).getFullYear(),t={};let o=0,a=0;for(const r of n)try{const n=await s(r.code,e);n?(t[r.code]=i(n),o++):a++}catch(e){console.error(`Failed to fetch holiday data for ${r.code}:`,e),a++}Object.keys(t).length>0?(function(e){localStorage.setItem("holidayData",JSON.stringify(e)),localStorage.setItem("lastUpdated",(new Date).toISOString())}(t),console.log(`Holiday data updated successfully. Successful fetches: ${o}, Failed fetches: ${a}`)):console.error("Failed to update holiday data. All fetches failed.")}else console.log("Holiday data is up to date")}();const e=function(){const e=localStorage.getItem("holidayData");return e?JSON.parse(e):null}(),t=localStorage.getItem("lastUpdated");console.log(`Holiday data last updated: ${t}`),e||console.warn("No holiday data available. Calculations may be inaccurate.")}catch(e){console.error("Failed to update holiday data:",e)}document.getElementById("calculatorForm"),document.getElementById("result"),document.getElementById("calculatedResult"),document.getElementById("calculationMode"),document.getElementById("workingDaysGroup"),document.getElementById("directionGroup"),document.getElementById("endDateGroup"),document.getElementById("endDate"),document.getElementById("workingDays"),document.getElementById("country");const e=document.getElementById("countrySearch");await async function(){console.log("Waiting for countries initialization...");for(let e=0;e<50;e++){if(a)return void console.log("Countries initialized successfully.");await new Promise((e=>setTimeout(e,100)))}console.warn("Countries initialization timed out. Using fallback list.")}(),d(c()),e.addEventListener("input",(function(){const e=this.value.toLowerCase();d(c().filter((t=>t.name.toLowerCase().includes(e)||t.code.toLowerCase().includes(e)))),console.log("Country search performed:",e)}))}))})();